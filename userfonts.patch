Submodule Telegram/lib_ui contains modified content
diff --git a/Telegram/lib_ui/ui/style/style_core_font.cpp b/Telegram/lib_ui/ui/style/style_core_font.cpp
index 0cd6580..1dbeb18 100644
--- a/Telegram/lib_ui/ui/style/style_core_font.cpp
+++ b/Telegram/lib_ui/ui/style/style_core_font.cpp
@@ -17,9 +17,6 @@
 #include <QtWidgets/QApplication>
 
 void style_InitFontsResource() {
-#ifndef DESKTOP_APP_USE_PACKAGED_FONTS
-	Q_INIT_RESOURCE(fonts);
-#endif // !DESKTOP_APP_USE_PACKAGED_FONTS
 #ifdef Q_OS_WIN
 	Q_INIT_RESOURCE(win);
 #elif defined Q_OS_MAC // Q_OS_WIN
@@ -119,16 +116,6 @@ enum {
 
 	FontTypesCount,
 };
-#ifndef DESKTOP_APP_USE_PACKAGED_FONTS
-QString FontTypeNames[FontTypesCount] = {
-	"DAOpenSansRegular",
-	"DAOpenSansRegularItalic",
-	"DAOpenSansBold",
-	"DAOpenSansBoldItalic",
-	"DAOpenSansSemibold",
-	"DAOpenSansSemiboldItalic",
-};
-#endif // !DESKTOP_APP_USE_PACKAGED_FONTS
 int32 FontTypeFlags[FontTypesCount] = {
 	0,
 	FontItalic,
@@ -166,55 +153,6 @@ void StartFonts() {
 		Ui::Integration::Instance().startFontsBegin();
 	}
 
-#ifndef DESKTOP_APP_USE_PACKAGED_FONTS
-	bool areGood[FontTypesCount] = { false };
-	for (auto i = 0; i != FontTypesCount; ++i) {
-		const auto name = FontTypeNames[i];
-		const auto flags = FontTypeFlags[i];
-		areGood[i] = LoadCustomFont(":/gui/fonts/" + name + ".ttf", name, flags);
-		Overrides[i] = name;
-#ifdef Q_OS_WIN
-		// Attempt to workaround a strange font bug with Open Sans Semibold not loading.
-		// See https://github.com/telegramdesktop/tdesktop/issues/3276 for details.
-		// Crash happens on "options.maxh / _t->_st->font->height" with "division by zero".
-		// In that place "_t->_st->font" is "semiboldFont" is "font(13 "Open Sans Semibold").
-		const auto fallback = FontTypeWindowsFallback[i];
-		if (!areGood[i]) {
-			if (ValidateFont(fallback, flags)) {
-				Overrides[i] = fallback;
-				UI_LOG(("Fonts Info: Using '%1' instead of '%2'.").arg(fallback).arg(name));
-			}
-		}
-		// Disable default fallbacks to Segoe UI, see:
-		// https://github.com/telegramdesktop/tdesktop/issues/5368
-		//
-		//QFont::insertSubstitution(name, fallback);
-#endif // Q_OS_WIN
-	}
-
-#ifdef Q_OS_WIN
-	auto list = QStringList();
-	list.append("Microsoft YaHei");
-	list.append("Microsoft JhengHei UI");
-	list.append("Yu Gothic UI");
-	list.append("\xEB\xA7\x91\xEC\x9D\x80 \xEA\xB3\xA0\xEB\x94\x95");
-	for (const auto &name : FontTypeNames) {
-		QFont::insertSubstitutions(name, list);
-	}
-#endif // Q_OS_WIN
-
-#ifdef Q_OS_MAC
-	auto list = QStringList();
-	list.append("STIXGeneral");
-	list.append(".SF NS Text");
-	list.append("Helvetica Neue");
-	list.append("Lucida Grande");
-	for (const auto &name : FontTypeNames) {
-		QFont::insertSubstitutions(name, list);
-	}
-#endif // Q_OS_MAC
-#endif // !DESKTOP_APP_USE_PACKAGED_FONTS
-
 	auto appFont = QApplication::font();
 	appFont.setStyleStrategy(QFont::PreferQuality);
 	QApplication::setFont(appFont);
@@ -284,18 +222,10 @@ FontData::FontData(int size, uint32 flags, int family, Font *other)
 
 	if (_flags & FontMonospace) {
 		f.setFamily(MonospaceFont());
-	} else {
-		f.setFamily(GetFontOverride(flags));
-	}
-
-#ifdef DESKTOP_APP_USE_PACKAGED_FONTS
-	if (_flags & FontSemibold) {
-		f.setWeight(QFont::DemiBold);
 	}
-#endif // DESKTOP_APP_USE_PACKAGED_FONTS
 
 	f.setPixelSize(size);
-	f.setBold(_flags & FontBold);
+	f.setBold((_flags & FontBold) || (_flags & FontSemibold));
 	f.setItalic(_flags & FontItalic);
 	f.setUnderline(_flags & FontUnderline);
 	f.setStrikeOut(_flags & FontStrikeOut);
